{"version":3,"file":"static/webpack/static/development/pages/index.js.c7db98a83ed03429d7a1.hot-update.js","sources":["webpack:///./components/questions-grid/index.js"],"sourcesContent":["import Question from '../question';\nimport { getAllQuestions, resetQuestions } from '../../api';\nimport styles from './styles';\n\nconst shuffleArray = (array) => {\n    const newArray = Object.assign([], array);\n    let currentIndex = newArray.length;\n    let temp, randomIndex;\n\n    while(0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temp = newArray[currentIndex];\n        newArray[currentIndex] = newArray[randomIndex];\n        newArray[randomIndex] = temp;\n    }\n\n    return newArray;\n};\n\nclass QuestionsGrid extends React.PureComponent {\n    componentDidMount() {\n        const { updateInitialQuestions } = this.props;\n        getAllQuestions(updateInitialQuestions);\n    }\n\n    resetQuestions = () => {\n        const { error } = resetQuestions();\n        // debugger;\n        if (!error) {\n            const { updateInitialQuestions } = this.props;\n            getAllQuestions(updateInitialQuestions);\n        }\n    }\n\n    render() {\n        const { questions, setModalVisibility } = this.props;\n        return (\n            <div className=\"questions-grid\">\n                {\n                    questions.map(question => (\n                        <Question\n                            key={`question-${question.id}`}\n                            question={question}\n                            setModalVisibility={setModalVisibility}\n                        />\n                    ))\n                }\n\n                <button className=\"reset-button\" onClick={this.resetQuestions}>\n                    Reiniciar\n                </button>\n\n                <style jsx>{styles}</style>\n            </div>\n        );\n    }\n}\n\nexport default QuestionsGrid;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;;;;;;AAbA;AAAA;AAEA;AACA;;;AAWA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAkBA;;;;AApCA;AACA;AAsCA;;;;A","sourceRoot":""}