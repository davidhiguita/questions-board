{"version":3,"file":"static/webpack/static/development/pages/index.js.95739f515d9003d2403b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import QUESTIONS from '../questions';\nimport Layout from '../components/layout';\nimport QuestionsGrid from '../components/questions-grid';\nimport Modal from '../components/modal';\nimport { setQuestionState } from '../helpers';\nimport { getAllQuestions, updateQuestion } from '../api';\n\nimport 'isomorphic-fetch';\n\nclass QuestionsBoard extends React.PureComponent {\n    constructor() {\n        super();\n\n        this.state = {\n            isModalOpened: false,\n            questions: QUESTIONS,\n            selectedQuestion: {}\n        };\n\n    }\n\n    answerQuestion = (isCorrect) => () => {\n        const { questions, selectedQuestion: { id } } = this.state;\n        const updatedQuestions = setQuestionState({\n            questions,\n            id,\n            newData: {\n                isCorrect\n            }\n        });\n        this.setState({\n            isModalOpened: false,\n            questions: updatedQuestions,\n            selectedQuestion: {}\n        }, () => {\n            updateQuestion(id, isCorrect);\n        });\n    }\n\n    setModalVisibility = (visible, question) => (event) => {\n        event.preventDefault();\n        this.setState({\n            isModalOpened: visible,\n            selectedQuestion: question\n        });\n    }\n\n    updateInitialQuestions = (questions) => {\n        console.log('newQuestions', questions);\n        // this.setState({ questions });\n    }\n\n    render() {\n        const { isModalOpened, questions, selectedQuestion } = this.state;\n\n        return (\n            <>\n                <Modal\n                    answerQuestion={this.answerQuestion}\n                    question={selectedQuestion}\n                    closeModal={this.setModalVisibility(false, {})}\n                    visible={isModalOpened}\n                />\n                <Layout title=\"Preguntas\">\n                    <QuestionsGrid\n                        questions={questions}\n                        setModalVisibility={this.setModalVisibility}\n                        updateInitialQuestions={this.updateInitialQuestions}\n                    />\n                </Layout>\n            </>\n        );\n    }\n}\n\nexport default QuestionsBoard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAhBA;AACA;AAZA;AA6BA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AANA;AACA;AA9BA;AAsCA;AAEA;AACA;AAtCA;AACA;AACA;AACA;AAHA;AAHA;AASA;AACA;;;AAgCA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA/DA;AACA;AAiEA;;;;A","sourceRoot":""}